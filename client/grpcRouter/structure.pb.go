// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: structure.proto

package grpcRouter

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --------- Type definations ---------
type Software struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Version         string `protobuf:"bytes,2,opt,name=Version,proto3" json:"Version,omitempty"`
	InstallData     string `protobuf:"bytes,3,opt,name=InstallData,proto3" json:"InstallData,omitempty"`
	Size            string `protobuf:"bytes,4,opt,name=Size,proto3" json:"Size,omitempty"`
	Publisher       string `protobuf:"bytes,5,opt,name=Publisher,proto3" json:"Publisher,omitempty"`
	InstallLocation string `protobuf:"bytes,6,opt,name=InstallLocation,proto3" json:"InstallLocation,omitempty"`
}

func (x *Software) Reset() {
	*x = Software{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structure_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Software) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Software) ProtoMessage() {}

func (x *Software) ProtoReflect() protoreflect.Message {
	mi := &file_structure_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Software.ProtoReflect.Descriptor instead.
func (*Software) Descriptor() ([]byte, []int) {
	return file_structure_proto_rawDescGZIP(), []int{0}
}

func (x *Software) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Software) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Software) GetInstallData() string {
	if x != nil {
		return x.InstallData
	}
	return ""
}

func (x *Software) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *Software) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *Software) GetInstallLocation() string {
	if x != nil {
		return x.InstallLocation
	}
	return ""
}

type FirewallRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Protocol      string `protobuf:"bytes,2,opt,name=Protocol,proto3" json:"Protocol,omitempty"`
	Dir           string `protobuf:"bytes,3,opt,name=Dir,proto3" json:"Dir,omitempty"`
	LocalPort     string `protobuf:"bytes,4,opt,name=LocalPort,proto3" json:"LocalPort,omitempty"`
	Action        string `protobuf:"bytes,5,opt,name=Action,proto3" json:"Action,omitempty"`
	RemotePort    string `protobuf:"bytes,6,opt,name=RemotePort,proto3" json:"RemotePort,omitempty"`
	Profile       string `protobuf:"bytes,7,opt,name=Profile,proto3" json:"Profile,omitempty"`
	LocalIP       string `protobuf:"bytes,8,opt,name=LocalIP,proto3" json:"LocalIP,omitempty"`
	Program       string `protobuf:"bytes,9,opt,name=Program,proto3" json:"Program,omitempty"`
	RemoteIP      string `protobuf:"bytes,10,opt,name=RemoteIP,proto3" json:"RemoteIP,omitempty"`
	Enable        string `protobuf:"bytes,11,opt,name=Enable,proto3" json:"Enable,omitempty"`
	Service       string `protobuf:"bytes,12,opt,name=Service,proto3" json:"Service,omitempty"`
	InterfaceType string `protobuf:"bytes,13,opt,name=InterfaceType,proto3" json:"InterfaceType,omitempty"`
}

func (x *FirewallRule) Reset() {
	*x = FirewallRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structure_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirewallRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirewallRule) ProtoMessage() {}

func (x *FirewallRule) ProtoReflect() protoreflect.Message {
	mi := &file_structure_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirewallRule.ProtoReflect.Descriptor instead.
func (*FirewallRule) Descriptor() ([]byte, []int) {
	return file_structure_proto_rawDescGZIP(), []int{1}
}

func (x *FirewallRule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FirewallRule) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *FirewallRule) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

func (x *FirewallRule) GetLocalPort() string {
	if x != nil {
		return x.LocalPort
	}
	return ""
}

func (x *FirewallRule) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *FirewallRule) GetRemotePort() string {
	if x != nil {
		return x.RemotePort
	}
	return ""
}

func (x *FirewallRule) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

func (x *FirewallRule) GetLocalIP() string {
	if x != nil {
		return x.LocalIP
	}
	return ""
}

func (x *FirewallRule) GetProgram() string {
	if x != nil {
		return x.Program
	}
	return ""
}

func (x *FirewallRule) GetRemoteIP() string {
	if x != nil {
		return x.RemoteIP
	}
	return ""
}

func (x *FirewallRule) GetEnable() string {
	if x != nil {
		return x.Enable
	}
	return ""
}

func (x *FirewallRule) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *FirewallRule) GetInterfaceType() string {
	if x != nil {
		return x.InterfaceType
	}
	return ""
}

type Process struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string  `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	IsRunning       bool    `protobuf:"varint,2,opt,name=IsRunning,proto3" json:"IsRunning,omitempty"`
	MemoryPercent   float32 `protobuf:"fixed32,3,opt,name=MemoryPercent,proto3" json:"MemoryPercent,omitempty"`
	CpuPercent      float32 `protobuf:"fixed32,4,opt,name=CpuPercent,proto3" json:"CpuPercent,omitempty"`
	ActiveThreads   int32   `protobuf:"varint,5,opt,name=ActiveThreads,proto3" json:"ActiveThreads,omitempty"`
	ProcessInstance int32   `protobuf:"varint,6,opt,name=ProcessInstance,proto3" json:"ProcessInstance,omitempty"`
}

func (x *Process) Reset() {
	*x = Process{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structure_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Process) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Process) ProtoMessage() {}

func (x *Process) ProtoReflect() protoreflect.Message {
	mi := &file_structure_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Process.ProtoReflect.Descriptor instead.
func (*Process) Descriptor() ([]byte, []int) {
	return file_structure_proto_rawDescGZIP(), []int{2}
}

func (x *Process) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Process) GetIsRunning() bool {
	if x != nil {
		return x.IsRunning
	}
	return false
}

func (x *Process) GetMemoryPercent() float32 {
	if x != nil {
		return x.MemoryPercent
	}
	return 0
}

func (x *Process) GetCpuPercent() float32 {
	if x != nil {
		return x.CpuPercent
	}
	return 0
}

func (x *Process) GetActiveThreads() int32 {
	if x != nil {
		return x.ActiveThreads
	}
	return 0
}

func (x *Process) GetProcessInstance() int32 {
	if x != nil {
		return x.ProcessInstance
	}
	return 0
}

type Cpu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VendorId string `protobuf:"bytes,1,opt,name=VendorId,proto3" json:"VendorId,omitempty"`
	Cores    string `protobuf:"bytes,2,opt,name=Cores,proto3" json:"Cores,omitempty"`
	Model    string `protobuf:"bytes,3,opt,name=Model,proto3" json:"Model,omitempty"`
}

func (x *Cpu) Reset() {
	*x = Cpu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structure_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cpu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cpu) ProtoMessage() {}

func (x *Cpu) ProtoReflect() protoreflect.Message {
	mi := &file_structure_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cpu.ProtoReflect.Descriptor instead.
func (*Cpu) Descriptor() ([]byte, []int) {
	return file_structure_proto_rawDescGZIP(), []int{3}
}

func (x *Cpu) GetVendorId() string {
	if x != nil {
		return x.VendorId
	}
	return ""
}

func (x *Cpu) GetCores() string {
	if x != nil {
		return x.Cores
	}
	return ""
}

func (x *Cpu) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

type Disk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Total string `protobuf:"bytes,2,opt,name=Total,proto3" json:"Total,omitempty"`
	Used  string `protobuf:"bytes,3,opt,name=Used,proto3" json:"Used,omitempty"`
}

func (x *Disk) Reset() {
	*x = Disk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structure_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Disk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Disk) ProtoMessage() {}

func (x *Disk) ProtoReflect() protoreflect.Message {
	mi := &file_structure_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Disk.ProtoReflect.Descriptor instead.
func (*Disk) Descriptor() ([]byte, []int) {
	return file_structure_proto_rawDescGZIP(), []int{4}
}

func (x *Disk) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Disk) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *Disk) GetUsed() string {
	if x != nil {
		return x.Used
	}
	return ""
}

type NetInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputBytes  int32 `protobuf:"varint,1,opt,name=InputBytes,proto3" json:"InputBytes,omitempty"`
	OutputBytes int32 `protobuf:"varint,2,opt,name=OutputBytes,proto3" json:"OutputBytes,omitempty"`
	InputPkt    int32 `protobuf:"varint,3,opt,name=InputPkt,proto3" json:"InputPkt,omitempty"`
	OutputPkt   int32 `protobuf:"varint,4,opt,name=OutputPkt,proto3" json:"OutputPkt,omitempty"`
}

func (x *NetInformation) Reset() {
	*x = NetInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structure_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetInformation) ProtoMessage() {}

func (x *NetInformation) ProtoReflect() protoreflect.Message {
	mi := &file_structure_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetInformation.ProtoReflect.Descriptor instead.
func (*NetInformation) Descriptor() ([]byte, []int) {
	return file_structure_proto_rawDescGZIP(), []int{5}
}

func (x *NetInformation) GetInputBytes() int32 {
	if x != nil {
		return x.InputBytes
	}
	return 0
}

func (x *NetInformation) GetOutputBytes() int32 {
	if x != nil {
		return x.OutputBytes
	}
	return 0
}

func (x *NetInformation) GetInputPkt() int32 {
	if x != nil {
		return x.InputPkt
	}
	return 0
}

func (x *NetInformation) GetOutputPkt() int32 {
	if x != nil {
		return x.OutputPkt
	}
	return 0
}

type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Status     string `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
	SCName     string `protobuf:"bytes,3,opt,name=SCName,proto3" json:"SCName,omitempty"`
	AcceptStop bool   `protobuf:"varint,4,opt,name=AcceptStop,proto3" json:"AcceptStop,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structure_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_structure_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_structure_proto_rawDescGZIP(), []int{6}
}

func (x *Service) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Service) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Service) GetSCName() string {
	if x != nil {
		return x.SCName
	}
	return ""
}

func (x *Service) GetAcceptStop() bool {
	if x != nil {
		return x.AcceptStop
	}
	return false
}

type SystemHealth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Temperature int32  `protobuf:"varint,1,opt,name=Temperature,proto3" json:"Temperature,omitempty"`
	CpuPercent  int32  `protobuf:"varint,2,opt,name=CpuPercent,proto3" json:"CpuPercent,omitempty"`
	InUseRam    string `protobuf:"bytes,3,opt,name=InUseRam,proto3" json:"InUseRam,omitempty"`
	CpuOpSystem int32  `protobuf:"varint,4,opt,name=CpuOpSystem,proto3" json:"CpuOpSystem,omitempty"`
	CpuOpIO     int32  `protobuf:"varint,5,opt,name=CpuOpIO,proto3" json:"CpuOpIO,omitempty"`
	CpuOpIdle   int32  `protobuf:"varint,6,opt,name=CpuOpIdle,proto3" json:"CpuOpIdle,omitempty"`
	CpuOpUser   int32  `protobuf:"varint,7,opt,name=CpuOpUser,proto3" json:"CpuOpUser,omitempty"`
}

func (x *SystemHealth) Reset() {
	*x = SystemHealth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structure_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemHealth) ProtoMessage() {}

func (x *SystemHealth) ProtoReflect() protoreflect.Message {
	mi := &file_structure_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemHealth.ProtoReflect.Descriptor instead.
func (*SystemHealth) Descriptor() ([]byte, []int) {
	return file_structure_proto_rawDescGZIP(), []int{7}
}

func (x *SystemHealth) GetTemperature() int32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *SystemHealth) GetCpuPercent() int32 {
	if x != nil {
		return x.CpuPercent
	}
	return 0
}

func (x *SystemHealth) GetInUseRam() string {
	if x != nil {
		return x.InUseRam
	}
	return ""
}

func (x *SystemHealth) GetCpuOpSystem() int32 {
	if x != nil {
		return x.CpuOpSystem
	}
	return 0
}

func (x *SystemHealth) GetCpuOpIO() int32 {
	if x != nil {
		return x.CpuOpIO
	}
	return 0
}

func (x *SystemHealth) GetCpuOpIdle() int32 {
	if x != nil {
		return x.CpuOpIdle
	}
	return 0
}

func (x *SystemHealth) GetCpuOpUser() int32 {
	if x != nil {
		return x.CpuOpUser
	}
	return 0
}

type SystemInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OS              string  `protobuf:"bytes,1,opt,name=OS,proto3" json:"OS,omitempty"`
	Platform        string  `protobuf:"bytes,2,opt,name=Platform,proto3" json:"Platform,omitempty"`
	PlatformVersion string  `protobuf:"bytes,3,opt,name=PlatformVersion,proto3" json:"PlatformVersion,omitempty"`
	Hostname        string  `protobuf:"bytes,4,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	KernelVersion   string  `protobuf:"bytes,5,opt,name=KernelVersion,proto3" json:"KernelVersion,omitempty"`
	KernelArch      string  `protobuf:"bytes,6,opt,name=KernelArch,proto3" json:"KernelArch,omitempty"`
	TotalRAM        string  `protobuf:"bytes,7,opt,name=TotalRAM,proto3" json:"TotalRAM,omitempty"`
	Disks           []*Disk `protobuf:"bytes,8,rep,name=Disks,proto3" json:"Disks,omitempty"`
	Cpus            []*Cpu  `protobuf:"bytes,9,rep,name=Cpus,proto3" json:"Cpus,omitempty"`
}

func (x *SystemInformation) Reset() {
	*x = SystemInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structure_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInformation) ProtoMessage() {}

func (x *SystemInformation) ProtoReflect() protoreflect.Message {
	mi := &file_structure_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInformation.ProtoReflect.Descriptor instead.
func (*SystemInformation) Descriptor() ([]byte, []int) {
	return file_structure_proto_rawDescGZIP(), []int{8}
}

func (x *SystemInformation) GetOS() string {
	if x != nil {
		return x.OS
	}
	return ""
}

func (x *SystemInformation) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *SystemInformation) GetPlatformVersion() string {
	if x != nil {
		return x.PlatformVersion
	}
	return ""
}

func (x *SystemInformation) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *SystemInformation) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *SystemInformation) GetKernelArch() string {
	if x != nil {
		return x.KernelArch
	}
	return ""
}

func (x *SystemInformation) GetTotalRAM() string {
	if x != nil {
		return x.TotalRAM
	}
	return ""
}

func (x *SystemInformation) GetDisks() []*Disk {
	if x != nil {
		return x.Disks
	}
	return nil
}

func (x *SystemInformation) GetCpus() []*Cpu {
	if x != nil {
		return x.Cpus
	}
	return nil
}

// ------------------------
// -------- ReqRes definations --------
type MetaDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode         int32              `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Sysinfo            *SystemInformation `protobuf:"bytes,2,opt,name=Sysinfo,proto3" json:"Sysinfo,omitempty"`
	Services           []*Service         `protobuf:"bytes,3,rep,name=Services,proto3" json:"Services,omitempty"`
	InstalledSoftwares []*Software        `protobuf:"bytes,4,rep,name=InstalledSoftwares,proto3" json:"InstalledSoftwares,omitempty"`
	NetInfo            *NetInformation    `protobuf:"bytes,5,opt,name=NetInfo,proto3" json:"NetInfo,omitempty"`
	SysHealth          *SystemHealth      `protobuf:"bytes,6,opt,name=SysHealth,proto3" json:"SysHealth,omitempty"`
	RunningProcesses   []string           `protobuf:"bytes,7,rep,name=RunningProcesses,proto3" json:"RunningProcesses,omitempty"`
	ProcessesInfo      []*Process         `protobuf:"bytes,8,rep,name=ProcessesInfo,proto3" json:"ProcessesInfo,omitempty"`
	ErrorMessage       string             `protobuf:"bytes,9,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *MetaDataResponse) Reset() {
	*x = MetaDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structure_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaDataResponse) ProtoMessage() {}

func (x *MetaDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_structure_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaDataResponse.ProtoReflect.Descriptor instead.
func (*MetaDataResponse) Descriptor() ([]byte, []int) {
	return file_structure_proto_rawDescGZIP(), []int{9}
}

func (x *MetaDataResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *MetaDataResponse) GetSysinfo() *SystemInformation {
	if x != nil {
		return x.Sysinfo
	}
	return nil
}

func (x *MetaDataResponse) GetServices() []*Service {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *MetaDataResponse) GetInstalledSoftwares() []*Software {
	if x != nil {
		return x.InstalledSoftwares
	}
	return nil
}

func (x *MetaDataResponse) GetNetInfo() *NetInformation {
	if x != nil {
		return x.NetInfo
	}
	return nil
}

func (x *MetaDataResponse) GetSysHealth() *SystemHealth {
	if x != nil {
		return x.SysHealth
	}
	return nil
}

func (x *MetaDataResponse) GetRunningProcesses() []string {
	if x != nil {
		return x.RunningProcesses
	}
	return nil
}

func (x *MetaDataResponse) GetProcessesInfo() []*Process {
	if x != nil {
		return x.ProcessesInfo
	}
	return nil
}

func (x *MetaDataResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type MetaDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestType  string   `protobuf:"bytes,1,opt,name=RequestType,proto3" json:"RequestType,omitempty"`
	RequestValue []string `protobuf:"bytes,2,rep,name=RequestValue,proto3" json:"RequestValue,omitempty"`
}

func (x *MetaDataRequest) Reset() {
	*x = MetaDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structure_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaDataRequest) ProtoMessage() {}

func (x *MetaDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_structure_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaDataRequest.ProtoReflect.Descriptor instead.
func (*MetaDataRequest) Descriptor() ([]byte, []int) {
	return file_structure_proto_rawDescGZIP(), []int{10}
}

func (x *MetaDataRequest) GetRequestType() string {
	if x != nil {
		return x.RequestType
	}
	return ""
}

func (x *MetaDataRequest) GetRequestValue() []string {
	if x != nil {
		return x.RequestValue
	}
	return nil
}

type MetaActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestType string        `protobuf:"bytes,1,opt,name=RequestType,proto3" json:"RequestType,omitempty"`
	FRule       *FirewallRule `protobuf:"bytes,2,opt,name=FRule,proto3" json:"FRule,omitempty"`
	ServiceName string        `protobuf:"bytes,3,opt,name=ServiceName,proto3" json:"ServiceName,omitempty"`
}

func (x *MetaActionRequest) Reset() {
	*x = MetaActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structure_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaActionRequest) ProtoMessage() {}

func (x *MetaActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_structure_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaActionRequest.ProtoReflect.Descriptor instead.
func (*MetaActionRequest) Descriptor() ([]byte, []int) {
	return file_structure_proto_rawDescGZIP(), []int{11}
}

func (x *MetaActionRequest) GetRequestType() string {
	if x != nil {
		return x.RequestType
	}
	return ""
}

func (x *MetaActionRequest) GetFRule() *FirewallRule {
	if x != nil {
		return x.FRule
	}
	return nil
}

func (x *MetaActionRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

type MetaActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode   int32  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *MetaActionResponse) Reset() {
	*x = MetaActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structure_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaActionResponse) ProtoMessage() {}

func (x *MetaActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_structure_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaActionResponse.ProtoReflect.Descriptor instead.
func (*MetaActionResponse) Descriptor() ([]byte, []int) {
	return file_structure_proto_rawDescGZIP(), []int{12}
}

func (x *MetaActionResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *MetaActionResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type StreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageType string `protobuf:"bytes,1,opt,name=MessageType,proto3" json:"MessageType,omitempty"`
	Message     string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *StreamRequest) Reset() {
	*x = StreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structure_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRequest) ProtoMessage() {}

func (x *StreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_structure_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRequest.ProtoReflect.Descriptor instead.
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return file_structure_proto_rawDescGZIP(), []int{13}
}

func (x *StreamRequest) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *StreamRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type EmptyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structure_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_structure_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_structure_proto_rawDescGZIP(), []int{14}
}

var File_structure_proto protoreflect.FileDescriptor

var file_structure_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x67, 0x72, 0x70, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x22, 0xb6, 0x01,
	0x0a, 0x08, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe8, 0x02, 0x0a, 0x0c, 0x46, 0x69, 0x72, 0x65, 0x77,
	0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x69, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x44, 0x69, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x49, 0x50, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x49, 0x50, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x1a, 0x0a,
	0x08, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x50, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x50, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xd1, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12,
	0x24, 0x0a, 0x0d, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x70, 0x75, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x43, 0x70, 0x75, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x4d, 0x0a, 0x03, 0x43, 0x70, 0x75, 0x12, 0x1a, 0x0a, 0x08,
	0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x72, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x22, 0x44, 0x0a, 0x04, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x73, 0x65, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x0e, 0x4e,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x6b, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x6b, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x6b, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x6b, 0x74, 0x22, 0x6d, 0x0a, 0x07, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x43, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x43, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x22, 0xe4, 0x01, 0x0a, 0x0c, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43,
	0x70, 0x75, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x43, 0x70, 0x75, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49,
	0x6e, 0x55, 0x73, 0x65, 0x52, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49,
	0x6e, 0x55, 0x73, 0x65, 0x52, 0x61, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x70, 0x75, 0x4f, 0x70,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x43, 0x70,
	0x75, 0x4f, 0x70, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x70, 0x75,
	0x4f, 0x70, 0x49, 0x4f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x43, 0x70, 0x75, 0x4f,
	0x70, 0x49, 0x4f, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x70, 0x75, 0x4f, 0x70, 0x49, 0x64, 0x6c, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x70, 0x75, 0x4f, 0x70, 0x49, 0x64, 0x6c,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x70, 0x75, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x70, 0x75, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x22,
	0xb4, 0x02, 0x0a, 0x11, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x53, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x4f, 0x53, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x48,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x4b, 0x65, 0x72, 0x6e, 0x65,
	0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x12, 0x1a, 0x0a,
	0x08, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x41, 0x4d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x41, 0x4d, 0x12, 0x26, 0x0a, 0x05, 0x44, 0x69, 0x73,
	0x6b, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x05, 0x44, 0x69, 0x73, 0x6b,
	0x73, 0x12, 0x23, 0x0a, 0x04, 0x43, 0x70, 0x75, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x70, 0x75,
	0x52, 0x04, 0x43, 0x70, 0x75, 0x73, 0x22, 0xdb, 0x03, 0x0a, 0x10, 0x4d, 0x65, 0x74, 0x61, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x53,
	0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x53, 0x79, 0x73,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x08, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x12, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x65, 0x64, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x53,
	0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x52, 0x12, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x65, 0x64, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x4e,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x4e, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x4e, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x36, 0x0a, 0x09, 0x53, 0x79, 0x73, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x09,
	0x53, 0x79, 0x73, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x75, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x10, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x0d, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x57, 0x0a, 0x0f, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x87, 0x01,
	0x0a, 0x11, 0x4d, 0x65, 0x74, 0x61, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x46, 0x52, 0x75, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05,
	0x46, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x58, 0x0a, 0x12, 0x4d, 0x65, 0x74, 0x61, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x4b, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x0f,
	0x0a, 0x0d, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0xfe, 0x01, 0x0a, 0x06, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x0d, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x11, 0x50, 0x65, 0x72, 0x66,
	0x6f, 0x72, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50,
	0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01,
	0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_structure_proto_rawDescOnce sync.Once
	file_structure_proto_rawDescData = file_structure_proto_rawDesc
)

func file_structure_proto_rawDescGZIP() []byte {
	file_structure_proto_rawDescOnce.Do(func() {
		file_structure_proto_rawDescData = protoimpl.X.CompressGZIP(file_structure_proto_rawDescData)
	})
	return file_structure_proto_rawDescData
}

var file_structure_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_structure_proto_goTypes = []interface{}{
	(*Software)(nil),           // 0: grpcRouter.Software
	(*FirewallRule)(nil),       // 1: grpcRouter.FirewallRule
	(*Process)(nil),            // 2: grpcRouter.Process
	(*Cpu)(nil),                // 3: grpcRouter.Cpu
	(*Disk)(nil),               // 4: grpcRouter.Disk
	(*NetInformation)(nil),     // 5: grpcRouter.NetInformation
	(*Service)(nil),            // 6: grpcRouter.Service
	(*SystemHealth)(nil),       // 7: grpcRouter.SystemHealth
	(*SystemInformation)(nil),  // 8: grpcRouter.SystemInformation
	(*MetaDataResponse)(nil),   // 9: grpcRouter.MetaDataResponse
	(*MetaDataRequest)(nil),    // 10: grpcRouter.MetaDataRequest
	(*MetaActionRequest)(nil),  // 11: grpcRouter.MetaActionRequest
	(*MetaActionResponse)(nil), // 12: grpcRouter.MetaActionResponse
	(*StreamRequest)(nil),      // 13: grpcRouter.StreamRequest
	(*EmptyResponse)(nil),      // 14: grpcRouter.EmptyResponse
}
var file_structure_proto_depIdxs = []int32{
	4,  // 0: grpcRouter.SystemInformation.Disks:type_name -> grpcRouter.Disk
	3,  // 1: grpcRouter.SystemInformation.Cpus:type_name -> grpcRouter.Cpu
	8,  // 2: grpcRouter.MetaDataResponse.Sysinfo:type_name -> grpcRouter.SystemInformation
	6,  // 3: grpcRouter.MetaDataResponse.Services:type_name -> grpcRouter.Service
	0,  // 4: grpcRouter.MetaDataResponse.InstalledSoftwares:type_name -> grpcRouter.Software
	5,  // 5: grpcRouter.MetaDataResponse.NetInfo:type_name -> grpcRouter.NetInformation
	7,  // 6: grpcRouter.MetaDataResponse.SysHealth:type_name -> grpcRouter.SystemHealth
	2,  // 7: grpcRouter.MetaDataResponse.ProcessesInfo:type_name -> grpcRouter.Process
	1,  // 8: grpcRouter.MetaActionRequest.FRule:type_name -> grpcRouter.FirewallRule
	10, // 9: grpcRouter.Router.FetchMetaData:input_type -> grpcRouter.MetaDataRequest
	11, // 10: grpcRouter.Router.PerformMetaAction:input_type -> grpcRouter.MetaActionRequest
	13, // 11: grpcRouter.Router.CommunicationChannel:input_type -> grpcRouter.StreamRequest
	9,  // 12: grpcRouter.Router.FetchMetaData:output_type -> grpcRouter.MetaDataResponse
	12, // 13: grpcRouter.Router.PerformMetaAction:output_type -> grpcRouter.MetaActionResponse
	14, // 14: grpcRouter.Router.CommunicationChannel:output_type -> grpcRouter.EmptyResponse
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_structure_proto_init() }
func file_structure_proto_init() {
	if File_structure_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_structure_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Software); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structure_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirewallRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structure_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Process); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structure_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cpu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structure_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Disk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structure_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structure_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structure_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemHealth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structure_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structure_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structure_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structure_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structure_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structure_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structure_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_structure_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_structure_proto_goTypes,
		DependencyIndexes: file_structure_proto_depIdxs,
		MessageInfos:      file_structure_proto_msgTypes,
	}.Build()
	File_structure_proto = out.File
	file_structure_proto_rawDesc = nil
	file_structure_proto_goTypes = nil
	file_structure_proto_depIdxs = nil
}
